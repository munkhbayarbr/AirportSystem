@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@using Server.DTO

<h3>Flight Status Updates</h3>

@if (flights == null || !flights.Any())
{
    <p>No flight data available.</p>
}
else
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Flight Number</th>
                <th>Departure</th>
                <th>Departure Time</th>
                <th>Arrival</th>
                <th>Arrival Time</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var flight in flights)
            {
                <tr>
                    <td>@flight.FlightNumber</td>
                    <td>@flight.Departure</td>
                    <td>@flight.DepartureTime.ToString("HH:mm")</td>
                    <td>@flight.Arrival</td>
                    <td>@flight.ArrivalTime.ToString("HH:mm")</td>
                    <td>@flight.Status</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<FlightReadDTO> flights;
    HubConnection connection;

    protected override async Task OnInitializedAsync()
    {


        connection = new HubConnectionBuilder()
                .WithUrl("https://localhost:7132/flighthub")
                .WithAutomaticReconnect()
                .Build();

        connection.On<IEnumerable<FlightReadDTO>>("ReceiveAllFlights", (flightsDoc) =>
        {
            flights = flightsDoc;
            InvokeAsync(StateHasChanged);
        });

        connection.On<FlightReadDTO>("ReceiveFlightStatusUpdate", (flight) =>
        {
            UpdateFlightStatus(flight);
            InvokeAsync(StateHasChanged);
        });

        await connection.StartAsync();


        await connection.InvokeAsync("RequestFlightList");



    }

    private void UpdateFlightStatus(FlightReadDTO flight)
    {
        var flightList = flights.ToList();

        for (int i = 0; i < flightList.Count; i++)
        {
            if (flightList[i].FlightNumber == flight.FlightNumber)
            {
                flightList[i] = flight;
                break;
            }
        }

        flights = flightList;
    }
}